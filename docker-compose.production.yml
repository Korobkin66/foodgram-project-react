version: '3'

# networks:
#   common_network:

volumes:
  pg_data_production:
  static:
  media:

services:
  db:
    image: postgres:13
    env_file: .env
    volumes:
      - pg_data_production:/var/lib/postgresql/data
    # networks:
    #   - common_network
  backend:
    image: korobkin66/foodgram_backend
    env_file: .env
    volumes:
      - static:/static
      - media:/app/media
    depends_on:
      - db
    restart: on-failure
    # networks:
    #   - common_network
    # hostname: backend
  frontend:
    image: korobkin66/foodgram_frontend 
    env_file: .env
    command: cp -r /app/build/. /frontend_static/
    volumes:
      - static:/frontend_static
    # networks:
    #   - common_network
  nginx:
    image: nginx:1.19.3
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./frontend/build:/usr/share/nginx/html/
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./docs/redoc.html:/usr/share/nginx/html/api/docs/redoc.html
      - ./docs/openapi-schema.yml:/usr/share/nginx/html/api/docs/openapi-schema.yml
      - static:/usr/share/nginx/html/static/
      - media:/usr/share/nginx/html/media/
      - /etc/letsencrypt/live/korpraktikum.ddns.net/fullchain.pem:/etc/letsencrypt/live/korpraktikum.ddns.net/fullchain.pem:ro
      - /etc/letsencrypt/live/korpraktikum.ddns.net/privkey.pem:/etc/letsencrypt/live/korpraktikum.ddns.net/privkey.pem:ro
      - /etc/letsencrypt/options-ssl-nginx.conf:/etc/letsencrypt/options-ssl-nginx.conf:ro
      - /etc/letsencrypt/ssl-dhparams.pem:/etc/letsencrypt/ssl-dhparams.pem:ro
    depends_on:
      - backend
    # networks:
    #   - common_network